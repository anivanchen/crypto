{"version":3,"sources":["App.js","index.js"],"names":["App","input","width","margin","outline","padding","border","borderBottom","button","color","backgroundColor","useState","message","setMessage","pass","setPass","dmessage","setMessage2","dpass","setPass2","style","position","top","left","transform","textAlign","overflowWrap","type","placeholder","value","onChange","e","target","required","onClick","preventDefault","key","require","createCipher","str","update","final","document","getElementById","innerHTML","id","createDecipher","ReactDOM","render","StrictMode"],"mappings":"qdAiFeA,MA9Ef,WAEE,IASMC,EAAQ,CACZC,MAAO,OACPC,OAAQ,cACRC,QAAS,OACTC,QAAS,MACTC,OAAQ,OACRC,aAAc,mBAEVC,EAAS,CACbC,MAAO,QACPH,OAAQ,OACRI,gBAAiB,UACjBL,QAAS,WACTF,OAAQ,YAGV,EAA8BQ,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAuBA,OACE,cAAC,WAAD,UACE,sBAAKC,MArDS,CAChBlB,MAAO,MACPmB,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,UAAW,SACXC,aAAc,cA8CZ,UAEE,yCACA,iCACE,uBAAOC,KAAK,OAAOP,MAAOnB,EAAO2B,YAAY,UAAUC,MAAOjB,EAASkB,SAAU,SAAAC,GAAC,OAAIlB,EAAWkB,EAAEC,OAAOH,QAAQI,UAAQ,IAC1H,uBAAON,KAAK,WAAWP,MAAOnB,EAAO2B,YAAY,WAAWC,MAAOf,EAAMgB,SAAU,SAAAC,GAAC,OAAIhB,EAAQgB,EAAEC,OAAOH,QAAQI,UAAQ,IACzH,wBAAQb,MAAOZ,EAAQ0B,QA7Bf,SAAAH,GACdA,EAAEI,iBACF,IACIC,EADWC,EAAQ,IACNC,aAAa,cAAexB,GACzCyB,EAAMH,EAAII,OAAO5B,EAAS,OAAQ,OACtC2B,GAAOH,EAAIK,MAAM,OAEjBC,SAASC,eAAe,mBAAmBC,UAAYL,EACvDG,SAASC,eAAe,mBAAmBvB,MAAMX,MAAQ,OAqBnD,qBACA,mBAAGoC,GAAG,kBAAN,uBAGF,yCACA,iCACE,uBAAOlB,KAAK,OAAOP,MAAOnB,EAAO2B,YAAY,UAAUC,MAAOb,EAAUc,SAAU,SAAAC,GAAC,OAAId,EAAYc,EAAEC,OAAOH,QAAQI,UAAQ,IAC5H,uBAAON,KAAK,WAAWP,MAAOnB,EAAO2B,YAAY,WAAWC,MAAOX,EAAOY,SAAU,SAAAC,GAAC,OAAIZ,EAASY,EAAEC,OAAOH,QAAQI,UAAQ,IAC3H,wBAAQb,MAAOZ,EAAQ0B,QA3Bf,SAAAH,GACdA,EAAEI,iBACF,IACIC,EADWC,EAAQ,IACNS,eAAe,cAAe5B,GAC3CqB,EAAMH,EAAII,OAAOxB,EAAU,MAAO,QACtCuB,GAAOH,EAAIK,MAAM,QAEjBC,SAASC,eAAe,mBAAmBC,UAAYL,EACvDG,SAASC,eAAe,mBAAmBvB,MAAMX,MAAQ,OAmBnD,qBACA,mBAAGoC,GAAG,kBAAN,6BCrEVE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFP,SAASC,eAAe,W","file":"static/js/main.3f1d4260.chunk.js","sourcesContent":["import { Fragment, useState } from 'react';\r\nimport './app.css';\r\n\r\nfunction App() {\r\n\r\n  const container = {\r\n    width: \"40%\",\r\n    position: \"absolute\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    transform: \"translate(-50%, -50%)\",\r\n    textAlign: \"center\",\r\n    overflowWrap: \"break-word\",\r\n  }\r\n  const input = {\r\n    width: \"100%\",\r\n    margin: \"10px 0 10px\",\r\n    outline: \"none\",\r\n    padding: \"5px\",\r\n    border: \"none\",\r\n    borderBottom: \"1px solid black\",\r\n  }\r\n  const button = {\r\n    color: \"white\",\r\n    border: \"none\",\r\n    backgroundColor: \"#008CBA\",\r\n    padding: \"5px 10px\",\r\n    margin: \"10px 0 0\",\r\n  }\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n  const [pass, setPass] = useState(\"\");\r\n  const [dmessage, setMessage2] = useState(\"\");\r\n  const [dpass, setPass2] = useState(\"\");\r\n\r\n  const encrypt = e => {\r\n    e.preventDefault();\r\n    const Crypto = require('crypto');\r\n    let key = Crypto.createCipher('aes-256-cbc', pass);\r\n    let str = key.update(message, 'utf8', 'hex');\r\n    str += key.final('hex');\r\n\r\n    document.getElementById(\"encryptedOutput\").innerHTML = str;\r\n    document.getElementById(\"encryptedOutput\").style.color = \"red\";\r\n  }\r\n  const decrypt = e => {\r\n    e.preventDefault();\r\n    const Crypto = require('crypto');\r\n    let key = Crypto.createDecipher('aes-256-cbc', dpass);\r\n    let str = key.update(dmessage, 'hex', 'utf8');\r\n    str += key.final('utf8');\r\n\r\n    document.getElementById(\"decryptedOutput\").innerHTML = str;\r\n    document.getElementById(\"decryptedOutput\").style.color = \"red\";\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <div style={container}>\r\n\r\n        <h2>Encrypt</h2>\r\n        <form>\r\n          <input type=\"text\" style={input} placeholder=\"Message\" value={message} onChange={e => setMessage(e.target.value)} required></input>\r\n          <input type=\"password\" style={input} placeholder=\"Password\" value={pass} onChange={e => setPass(e.target.value)} required></input>\r\n          <button style={button} onClick={encrypt}>Encrypt</button>\r\n          <p id=\"encryptedOutput\">Output</p>\r\n        </form>\r\n\r\n        <h2>Decrypt</h2>\r\n        <form>\r\n          <input type=\"text\" style={input} placeholder=\"Message\" value={dmessage} onChange={e => setMessage2(e.target.value)} required></input>\r\n          <input type=\"password\" style={input} placeholder=\"Password\" value={dpass} onChange={e => setPass2(e.target.value)} required></input>\r\n          <button style={button} onClick={decrypt}>Decrypt</button>\r\n          <p id=\"decryptedOutput\">Output</p>\r\n        </form>\r\n\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}