{"version":3,"sources":["App.js","index.js"],"names":["App","input","width","margin","outline","padding","border","borderBottom","textAlign","button","color","backgroundColor","useState","message","setMessage","pass","setPass","dmessage","setMessage2","dpass","setPass2","style","position","top","left","transform","overflowWrap","type","placeholder","value","onChange","e","target","required","onClick","preventDefault","key","require","createCipher","str","update","final","document","getElementById","innerHTML","id","createDecipher","ReactDOM","render","StrictMode"],"mappings":"qdAkFeA,MA/Ef,WAEE,IASMC,EAAQ,CACZC,MAAO,OACPC,OAAQ,cACRC,QAAS,OACTC,QAAS,MACTC,OAAQ,OACRC,aAAc,kBACdC,UAAW,UAEPC,EAAS,CACbC,MAAO,QACPJ,OAAQ,OACRK,gBAAiB,UACjBN,QAAS,WACTF,OAAQ,YAGV,EAA8BS,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KAuBA,OACE,cAAC,WAAD,UACE,sBAAKC,MAtDS,CAChBnB,MAAO,MACPoB,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXjB,UAAW,SACXkB,aAAc,cA+CZ,UAEE,yCACA,iCACE,uBAAOC,KAAK,OAAON,MAAOpB,EAAO2B,YAAY,UAAUC,MAAOhB,EAASiB,SAAU,SAAAC,GAAC,OAAIjB,EAAWiB,EAAEC,OAAOH,QAAQI,UAAQ,IAC1H,uBAAON,KAAK,WAAWN,MAAOpB,EAAO2B,YAAY,WAAWC,MAAOd,EAAMe,SAAU,SAAAC,GAAC,OAAIf,EAAQe,EAAEC,OAAOH,QAAQI,UAAQ,IACzH,wBAAQZ,MAAOZ,EAAQyB,QA7Bf,SAAAH,GACdA,EAAEI,iBACF,IACIC,EADWC,EAAQ,IACNC,aAAa,cAAevB,GACzCwB,EAAMH,EAAII,OAAO3B,EAAS,OAAQ,OACtC0B,GAAOH,EAAIK,MAAM,OAEjBC,SAASC,eAAe,mBAAmBC,UAAYL,EACvDG,SAASC,eAAe,mBAAmBtB,MAAMX,MAAQ,OAqBnD,qBACA,mBAAGmC,GAAG,kBAAN,uBAGF,yCACA,iCACE,uBAAOlB,KAAK,OAAON,MAAOpB,EAAO2B,YAAY,UAAUC,MAAOZ,EAAUa,SAAU,SAAAC,GAAC,OAAIb,EAAYa,EAAEC,OAAOH,QAAQI,UAAQ,IAC5H,uBAAON,KAAK,WAAWN,MAAOpB,EAAO2B,YAAY,WAAWC,MAAOV,EAAOW,SAAU,SAAAC,GAAC,OAAIX,EAASW,EAAEC,OAAOH,QAAQI,UAAQ,IAC3H,wBAAQZ,MAAOZ,EAAQyB,QA3Bf,SAAAH,GACdA,EAAEI,iBACF,IACIC,EADWC,EAAQ,IACNS,eAAe,cAAe3B,GAC3CoB,EAAMH,EAAII,OAAOvB,EAAU,MAAO,QACtCsB,GAAOH,EAAIK,MAAM,QAEjBC,SAASC,eAAe,mBAAmBC,UAAYL,EACvDG,SAASC,eAAe,mBAAmBtB,MAAMX,MAAQ,OAmBnD,qBACA,mBAAGmC,GAAG,kBAAN,6BCtEVE,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFP,SAASC,eAAe,W","file":"static/js/main.0b6e7193.chunk.js","sourcesContent":["import { Fragment, useState } from 'react';\nimport './app.css';\n\nfunction App() {\n\n  const container = {\n    width: \"40%\",\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    textAlign: \"center\",\n    overflowWrap: \"break-word\",\n  }\n  const input = {\n    width: \"100%\",\n    margin: \"10px 0 10px\",\n    outline: \"none\",\n    padding: \"5px\",\n    border: \"none\",\n    borderBottom: \"1px solid black\",\n    textAlign: \"center\",\n  }\n  const button = {\n    color: \"white\",\n    border: \"none\",\n    backgroundColor: \"#008CBA\",\n    padding: \"5px 10px\",\n    margin: \"10px 0 0\",\n  }\n\n  const [message, setMessage] = useState(\"\");\n  const [pass, setPass] = useState(\"\");\n  const [dmessage, setMessage2] = useState(\"\");\n  const [dpass, setPass2] = useState(\"\");\n\n  const encrypt = e => {\n    e.preventDefault();\n    const Crypto = require('crypto');\n    let key = Crypto.createCipher('aes-256-cbc', pass);\n    let str = key.update(message, 'utf8', 'hex');\n    str += key.final('hex');\n\n    document.getElementById(\"encryptedOutput\").innerHTML = str;\n    document.getElementById(\"encryptedOutput\").style.color = \"red\";\n  }\n  const decrypt = e => {\n    e.preventDefault();\n    const Crypto = require('crypto');\n    let key = Crypto.createDecipher('aes-256-cbc', dpass);\n    let str = key.update(dmessage, 'hex', 'utf8');\n    str += key.final('utf8');\n\n    document.getElementById(\"decryptedOutput\").innerHTML = str;\n    document.getElementById(\"decryptedOutput\").style.color = \"red\";\n  }\n\n  return (\n    <Fragment>\n      <div style={container}>\n\n        <h2>Encrypt</h2>\n        <form>\n          <input type=\"text\" style={input} placeholder=\"Message\" value={message} onChange={e => setMessage(e.target.value)} required></input>\n          <input type=\"password\" style={input} placeholder=\"Password\" value={pass} onChange={e => setPass(e.target.value)} required></input>\n          <button style={button} onClick={encrypt}>Encrypt</button>\n          <p id=\"encryptedOutput\">Output</p>\n        </form>\n\n        <h2>Decrypt</h2>\n        <form>\n          <input type=\"text\" style={input} placeholder=\"Message\" value={dmessage} onChange={e => setMessage2(e.target.value)} required></input>\n          <input type=\"password\" style={input} placeholder=\"Password\" value={dpass} onChange={e => setPass2(e.target.value)} required></input>\n          <button style={button} onClick={decrypt}>Decrypt</button>\n          <p id=\"decryptedOutput\">Output</p>\n        </form>\n\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}